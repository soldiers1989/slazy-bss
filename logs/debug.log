2018-04-03 16:37:33  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:37:33 CST 2018]; root of context hierarchy
2018-04-03 16:37:33  [ background-preinit:222 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:37:33  [ main:245 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:37:33  [ main:280 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:37:33  [ main:614 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:37:33  [ main:630 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc558c6: startup date [Tue Apr 03 16:37:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:37:34  [ main:1533 ] - [ INFO ]  BeanFactory id=f6ea8329-55ca-3a8e-9237-d77d697c3f3b
2018-04-03 16:37:34  [ main:1560 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:37:34  [ main:1635 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$af128c50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:37:34  [ main:1644 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ce5e60f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:37:34  [ main:1676 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:37:35  [ main:2015 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:37:35  [ localhost-startStop-1:2165 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1535 ms
2018-04-03 16:37:35  [ localhost-startStop-1:2412 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:37:35  [ localhost-startStop-1:2416 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2417 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2417 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2417 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2418 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2418 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:37:35  [ localhost-startStop-1:2418 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:37:35  [ main:2452 ] - [ WARN ]  Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.slazy.bss.order.service.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-04-03 16:37:35  [ main:2472 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 16:37:35  [ main:2611 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.slazy.bss.order.controller.OrderController required a bean of type 'com.slazy.bss.order.service.OrderService' that could not be found.


Action:

Consider defining a bean of type 'com.slazy.bss.order.service.OrderService' in your configuration.

2018-04-03 16:39:15  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:39:15 CST 2018]; root of context hierarchy
2018-04-03 16:39:15  [ main:242 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:39:15  [ background-preinit:255 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:39:15  [ main:286 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:39:15  [ main:627 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:39:15  [ main:643 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:39:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:39:16  [ main:1579 ] - [ INFO ]  BeanFactory id=f6ea8329-55ca-3a8e-9237-d77d697c3f3b
2018-04-03 16:39:16  [ main:1606 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:39:16  [ main:1686 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:39:16  [ main:1696 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:39:16  [ main:1729 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:39:17  [ main:2080 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:39:17  [ localhost-startStop-1:2237 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1594 ms
2018-04-03 16:39:17  [ localhost-startStop-1:2536 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:39:17  [ localhost-startStop-1:2541 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2541 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2542 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2542 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2542 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2542 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:39:17  [ localhost-startStop-1:2543 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:39:17  [ main:2580 ] - [ WARN ]  Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.slazy.bss.order.service.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-04-03 16:39:17  [ main:2602 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 16:39:17  [ main:2746 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.slazy.bss.order.controller.OrderController required a bean of type 'com.slazy.bss.order.service.OrderService' that could not be found.


Action:

Consider defining a bean of type 'com.slazy.bss.order.service.OrderService' in your configuration.

2018-04-03 16:40:00  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:40:00 CST 2018]; root of context hierarchy
2018-04-03 16:40:00  [ main:232 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:40:00  [ background-preinit:262 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:40:00  [ main:277 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:40:01  [ main:614 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:40:01  [ main:629 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:40:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:40:01  [ main:1564 ] - [ INFO ]  BeanFactory id=f6ea8329-55ca-3a8e-9237-d77d697c3f3b
2018-04-03 16:40:01  [ main:1593 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:40:02  [ main:1670 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:40:02  [ main:1678 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:40:02  [ main:1711 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:40:02  [ main:2059 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:40:02  [ localhost-startStop-1:2234 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1605 ms
2018-04-03 16:40:02  [ localhost-startStop-1:2482 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:40:02  [ localhost-startStop-1:2486 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2486 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2487 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2487 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2487 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2487 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:40:02  [ localhost-startStop-1:2487 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:40:02  [ main:2526 ] - [ WARN ]  Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.slazy.bss.order.service.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-04-03 16:40:02  [ main:2546 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 16:40:03  [ main:2708 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.slazy.bss.order.controller.OrderController required a bean of type 'com.slazy.bss.order.service.OrderService' that could not be found.


Action:

Consider defining a bean of type 'com.slazy.bss.order.service.OrderService' in your configuration.

2018-04-03 16:41:38  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:41:38 CST 2018]; root of context hierarchy
2018-04-03 16:41:39  [ main:230 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:41:39  [ background-preinit:238 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:41:39  [ main:274 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:41:39  [ main:618 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:41:39  [ main:634 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:41:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:41:40  [ main:1492 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:41:40  [ main:1525 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:41:40  [ main:1604 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:41:40  [ main:1612 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:41:40  [ main:1645 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:41:40  [ main:1978 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:41:40  [ localhost-startStop-1:2140 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1506 ms
2018-04-03 16:41:41  [ localhost-startStop-1:2414 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:41:41  [ localhost-startStop-1:2417 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2418 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2418 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2419 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2419 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2419 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:41:41  [ localhost-startStop-1:2419 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:41:41  [ main:3161 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:41:41  [ main:3161 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:41:41  [ main:3167 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:41:41  [ main:3167 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:41:42  [ main:3389 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:41:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:41:42  [ main:3464 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:41:42  [ main:3465 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:41:42  [ main:3494 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:41:42  [ main:3495 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:41:42  [ main:3531 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:41:42  [ main:4076 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4077 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:41:42  [ main:4077 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4078 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:41:42  [ main:4078 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:41:42  [ main:4078 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:41:42  [ main:4079 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:41:42  [ main:4080 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4080 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:41:42  [ main:4081 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4081 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:41:42  [ main:4081 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:41:42  [ main:4083 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:41:42  [ main:4083 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:41:42  [ main:4084 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:41:42  [ main:4084 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4085 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:41:42  [ main:4086 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4086 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4087 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:41:42  [ main:4088 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:41:42  [ main:4088 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4088 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4089 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4089 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:41:42  [ main:4089 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:42  [ main:4090 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:41:43  [ main:4230 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:41:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:41:43  [ main:4231 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:41:43  [ main:4402 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:41:43  [ main:4409 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4411 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4411 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4412 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4412 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4413 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:41:43  [ main:4415 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:41:43  [ main:4425 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:41:43  [ main:4434 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:41:43  [ main:4439 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:41:43  [ main:4448 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c8c9a05,type=ConfigurationPropertiesRebinder]
2018-04-03 16:41:43  [ main:4451 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:41:43  [ main:4452 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:41:43  [ main:4577 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:41:43  [ main:4585 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:41:43  [ main:4620 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:41:43  [ main:4621 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:41:43  [ main:4629 ] - [ INFO ]  Discovery Client initialized at timestamp 1522744903412 with initial instances count: 0
2018-04-03 16:41:43  [ main:4652 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:41:43  [ main:4654 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:41:43  [ main:4659 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:41:43  [ main:4665 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:41:43  [ main:4666 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:41:43  [ main:4668 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:41:43  [ main:4670 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:41:43  [ main:4672 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:41:43  [ main:4674 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:41:43  [ main:4676 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:41:43  [ main:4681 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:41:43  [ main:4683 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:41:43  [ main:4685 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:41:43  [ main:4687 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:41:43  [ main:4689 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:41:43  [ main:4743 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:41:43  [ main:4743 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:41:43  [ main:4747 ] - [ INFO ]  Started SlazyOrderApplication in 5.117 seconds (JVM running for 5.483)
2018-04-03 16:42:14  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf: startup date [Tue Apr 03 16:42:14 CST 2018]; root of context hierarchy
2018-04-03 16:42:14  [ main:269 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:42:14  [ background-preinit:291 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:42:14  [ main:319 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$db0584ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:42:15  [ main:712 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:42:15  [ main:732 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4da855dd: startup date [Tue Apr 03 16:42:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf
2018-04-03 16:42:16  [ main:1807 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:42:16  [ main:1847 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:42:16  [ main:1958 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f118282e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:42:16  [ main:1969 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$beeb81ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:42:16  [ main:2010 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$db0584ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:42:16  [ main:2421 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:42:16  [ localhost-startStop-1:2592 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1860 ms
2018-04-03 16:42:17  [ localhost-startStop-1:2872 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:42:17  [ localhost-startStop-1:2877 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2877 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2878 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2878 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2878 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2879 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:42:17  [ localhost-startStop-1:2879 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:42:18  [ main:3763 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:42:18  [ main:3763 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:42:18  [ main:3771 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:42:18  [ main:3772 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:42:18  [ main:4079 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4da855dd: startup date [Tue Apr 03 16:42:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf
2018-04-03 16:42:18  [ main:4174 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:42:18  [ main:4175 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:42:18  [ main:4217 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:42:18  [ main:4217 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:42:18  [ main:4272 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:42:19  [ main:5041 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:42:19  [ main:5042 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:42:19  [ main:5043 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5043 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5044 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:42:19  [ main:5044 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:42:19  [ main:5046 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:42:19  [ main:5046 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5047 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:42:19  [ main:5047 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:42:19  [ main:5048 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5049 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:42:19  [ main:5049 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5051 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:42:19  [ main:5052 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5054 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:42:19  [ main:5055 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:42:19  [ main:5055 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5055 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5056 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5056 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5057 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5057 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:42:19  [ main:5058 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:42:19  [ main:5059 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:42:19  [ main:5059 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:42:19  [ main:5060 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:42:19  [ main:5191 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4da855dd: startup date [Tue Apr 03 16:42:15 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf] and template loader path [classpath:/templates/]
2018-04-03 16:42:19  [ main:5192 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:42:19  [ main:5574 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:42:19  [ main:5584 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5586 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5587 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5587 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5588 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5588 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:42:19  [ main:5591 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:42:19  [ main:5604 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:42:19  [ main:5618 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:42:20  [ main:5624 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:42:20  [ main:5638 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4da855dd,type=ConfigurationPropertiesRebinder]
2018-04-03 16:42:20  [ main:5644 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:42:20  [ main:5645 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:42:20  [ main:5865 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:42:20  [ main:5874 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:42:20  [ main:5919 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:42:20  [ main:5919 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:42:20  [ main:5930 ] - [ INFO ]  Discovery Client initialized at timestamp 1522744940311 with initial instances count: 0
2018-04-03 16:42:20  [ main:5960 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:42:20  [ main:5963 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:42:20  [ main:5970 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:42:20  [ main:5977 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:42:20  [ main:5979 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:42:20  [ main:5981 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:42:20  [ main:5983 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:42:20  [ main:5985 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:42:20  [ main:5987 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:42:20  [ main:5990 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:42:20  [ main:5996 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:42:20  [ main:5998 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:42:20  [ main:6000 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:42:20  [ main:6002 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:42:20  [ main:6004 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:42:20  [ main:6070 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:42:20  [ main:6071 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:42:20  [ main:6077 ] - [ INFO ]  Started SlazyOrderApplication in 6.483 seconds (JVM running for 7.209)
2018-04-03 16:42:27  [ http-nio-8081-exec-2:12724 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:42:27  [ http-nio-8081-exec-2:12746 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2018-04-03 16:43:56  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf: startup date [Tue Apr 03 16:43:56 CST 2018]; root of context hierarchy
2018-04-03 16:43:57  [ main:274 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:43:57  [ background-preinit:294 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:43:57  [ main:316 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c8bb5f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:43:57  [ main:724 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:43:57  [ main:742 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5489c777: startup date [Tue Apr 03 16:43:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf
2018-04-03 16:43:58  [ main:1728 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:43:58  [ main:1765 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:43:58  [ main:1868 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$329e5935] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:43:58  [ main:1879 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71b2f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:43:58  [ main:1922 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c8bb5f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:43:59  [ main:2317 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:43:59  [ localhost-startStop-1:2505 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1763 ms
2018-04-03 16:43:59  [ localhost-startStop-1:2783 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:43:59  [ localhost-startStop-1:2788 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2788 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2789 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2789 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2789 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2789 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:43:59  [ localhost-startStop-1:2789 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:44:00  [ main:3723 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:44:00  [ main:3723 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:44:00  [ main:3730 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:44:00  [ main:3730 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:44:00  [ main:4027 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5489c777: startup date [Tue Apr 03 16:43:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf
2018-04-03 16:44:01  [ main:4126 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:44:01  [ main:4127 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:44:01  [ main:4173 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:44:01  [ main:4174 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:44:01  [ main:4235 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:44:01  [ main:4956 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4958 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:44:01  [ main:4958 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:44:01  [ main:4959 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:44:01  [ main:4959 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4960 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4962 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:44:01  [ main:4963 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4963 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4968 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:44:01  [ main:4971 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:44:01  [ main:4971 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4973 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:44:01  [ main:4974 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:44:01  [ main:4975 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4975 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4976 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4976 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:44:01  [ main:4977 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:44:01  [ main:4977 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4977 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:44:01  [ main:4979 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:44:01  [ main:4979 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:44:01  [ main:4980 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:01  [ main:4980 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:44:01  [ main:4981 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:44:01  [ main:4981 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:44:02  [ main:5116 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5489c777: startup date [Tue Apr 03 16:43:57 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d900ecf] and template loader path [classpath:/templates/]
2018-04-03 16:44:02  [ main:5117 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:44:02  [ main:5674 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:44:02  [ main:5683 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5686 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5686 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5687 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5687 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5688 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:44:02  [ main:5690 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:44:02  [ main:5702 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:44:02  [ main:5714 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:44:02  [ main:5720 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:44:02  [ main:5732 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5489c777,type=ConfigurationPropertiesRebinder]
2018-04-03 16:44:02  [ main:5736 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:44:02  [ main:5737 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:44:02  [ main:5916 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:44:02  [ main:5925 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:44:02  [ main:5966 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:44:02  [ main:5967 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:44:02  [ main:5976 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745042899 with initial instances count: 0
2018-04-03 16:44:02  [ main:6005 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:44:02  [ main:6008 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:44:02  [ main:6015 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:44:02  [ main:6023 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:44:02  [ main:6025 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:44:02  [ main:6027 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:44:02  [ main:6029 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:44:02  [ main:6031 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:44:02  [ main:6033 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:44:02  [ main:6035 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:44:02  [ main:6042 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:44:02  [ main:6044 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:44:02  [ main:6046 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:44:02  [ main:6047 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:44:02  [ main:6049 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:44:03  [ main:6120 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:44:03  [ main:6121 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:44:03  [ main:6127 ] - [ INFO ]  Started SlazyOrderApplication in 6.531 seconds (JVM running for 7.055)
2018-04-03 16:44:10  [ http-nio-8081-exec-4:13971 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:44:10  [ http-nio-8081-exec-4:13996 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2018-04-03 16:45:37  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:45:37 CST 2018]; root of context hierarchy
2018-04-03 16:45:37  [ background-preinit:238 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:45:37  [ main:244 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:45:37  [ main:320 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:45:38  [ main:642 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:45:38  [ main:658 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:45:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:45:39  [ main:1570 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:45:39  [ main:1603 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:45:39  [ main:1673 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:45:39  [ main:1682 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:45:39  [ main:1713 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:45:39  [ main:2049 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:45:39  [ localhost-startStop-1:2194 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1536 ms
2018-04-03 16:45:40  [ localhost-startStop-1:2419 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:45:40  [ localhost-startStop-1:2423 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2423 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2424 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2424 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2424 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2425 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:45:40  [ localhost-startStop-1:2425 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:45:40  [ main:3184 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:45:40  [ main:3184 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:45:40  [ main:3190 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:45:40  [ main:3190 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:45:41  [ main:3420 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:45:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:45:41  [ main:3495 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:45:41  [ main:3496 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:45:41  [ main:3525 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:45:41  [ main:3526 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:45:41  [ main:3562 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:45:41  [ main:4076 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:45:41  [ main:4077 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4077 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:45:41  [ main:4078 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:45:41  [ main:4078 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4079 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4079 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:45:41  [ main:4080 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:45:41  [ main:4080 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:45:41  [ main:4081 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4081 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:45:41  [ main:4081 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4082 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:45:41  [ main:4083 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4084 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:45:41  [ main:4084 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4084 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:45:41  [ main:4085 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:45:41  [ main:4086 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:45:41  [ main:4087 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:45:41  [ main:4087 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4088 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:45:41  [ main:4088 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4089 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4089 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:45:41  [ main:4090 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4090 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:45:41  [ main:4191 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:45:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:45:41  [ main:4192 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:45:41  [ main:4373 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:45:41  [ main:4381 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:45:41  [ main:4383 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:45:41  [ main:4383 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:45:42  [ main:4384 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:45:42  [ main:4384 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:45:42  [ main:4385 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:45:42  [ main:4387 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:45:42  [ main:4397 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:45:42  [ main:4406 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:45:42  [ main:4412 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:45:42  [ main:4421 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63f259c3,type=ConfigurationPropertiesRebinder]
2018-04-03 16:45:42  [ main:4424 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:45:42  [ main:4425 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:45:42  [ main:4554 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:45:42  [ main:4565 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:45:42  [ main:4602 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:45:42  [ main:4602 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:45:42  [ main:4610 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745142226 with initial instances count: 0
2018-04-03 16:45:42  [ main:4634 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:45:42  [ main:4636 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:45:42  [ main:4641 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:45:42  [ main:4646 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:45:42  [ main:4647 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:45:42  [ main:4649 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:45:42  [ main:4651 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:45:42  [ main:4653 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:45:42  [ main:4654 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:45:42  [ main:4656 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:45:42  [ main:4660 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:45:42  [ main:4662 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:45:42  [ main:4664 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:45:42  [ main:4665 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:45:42  [ main:4667 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:45:42  [ main:4724 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:45:42  [ main:4725 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:45:42  [ main:4730 ] - [ INFO ]  Started SlazyOrderApplication in 5.098 seconds (JVM running for 5.473)
2018-04-03 16:45:53  [ http-nio-8081-exec-4:15820 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:45:53  [ http-nio-8081-exec-4:15837 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 16:47:24  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:47:24 CST 2018]; root of context hierarchy
2018-04-03 16:47:24  [ background-preinit:247 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:47:24  [ main:276 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:47:24  [ main:328 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:47:24  [ main:654 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:47:25  [ main:670 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:47:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:47:25  [ main:1564 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:47:25  [ main:1599 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:47:26  [ main:1682 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:47:26  [ main:1693 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:47:26  [ main:1727 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:47:26  [ main:2062 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:47:26  [ localhost-startStop-1:2214 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1544 ms
2018-04-03 16:47:26  [ localhost-startStop-1:2492 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:47:26  [ localhost-startStop-1:2496 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2496 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2497 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2497 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2497 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2497 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:47:26  [ localhost-startStop-1:2498 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:47:27  [ main:3247 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:47:27  [ main:3248 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:47:27  [ main:3254 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:47:27  [ main:3254 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:47:27  [ main:3482 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:47:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:47:27  [ main:3562 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:47:27  [ main:3563 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:47:27  [ main:3594 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:47:27  [ main:3594 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:47:27  [ main:3631 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:47:28  [ main:4148 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:47:28  [ main:4149 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:47:28  [ main:4149 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:47:28  [ main:4149 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:47:28  [ main:4150 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4150 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:47:28  [ main:4151 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:47:28  [ main:4151 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:47:28  [ main:4152 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:47:28  [ main:4152 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:47:28  [ main:4153 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:47:28  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:47:28  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4155 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4156 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4157 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4158 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:47:28  [ main:4159 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4160 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:47:28  [ main:4160 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4160 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4161 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:47:28  [ main:4161 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4162 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:47:28  [ main:4162 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4162 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:47:28  [ main:4275 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:47:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:47:28  [ main:4276 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:47:28  [ main:4621 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:47:28  [ main:4627 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4629 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4629 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4629 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4630 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4631 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:47:28  [ main:4633 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:47:28  [ main:4642 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:47:28  [ main:4651 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:47:28  [ main:4655 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:47:29  [ main:4664 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63f259c3,type=ConfigurationPropertiesRebinder]
2018-04-03 16:47:29  [ main:4668 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:47:29  [ main:4669 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:47:29  [ main:4776 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:47:29  [ main:4788 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:47:29  [ main:4822 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:47:29  [ main:4823 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:47:29  [ main:4831 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745249169 with initial instances count: 0
2018-04-03 16:47:29  [ main:4854 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:47:29  [ main:4857 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:47:29  [ main:4862 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:47:29  [ main:4866 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:47:29  [ main:4868 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:47:29  [ main:4870 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:47:29  [ main:4872 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:47:29  [ main:4873 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:47:29  [ main:4875 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:47:29  [ main:4876 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:47:29  [ main:4881 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:47:29  [ main:4882 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:47:29  [ main:4884 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:47:29  [ main:4885 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:47:29  [ main:4887 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:47:29  [ main:4941 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:47:29  [ main:4942 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:47:29  [ main:4945 ] - [ INFO ]  Started SlazyOrderApplication in 5.321 seconds (JVM running for 5.7)
2018-04-03 16:47:32  [ http-nio-8081-exec-1:8133 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:47:32  [ http-nio-8081-exec-1:8150 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 16:47:39  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:47:39 CST 2018]; root of context hierarchy
2018-04-03 16:47:39  [ main:239 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:47:39  [ background-preinit:252 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:47:39  [ main:283 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:47:40  [ main:635 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:47:40  [ main:651 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:47:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:51:30  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:51:30 CST 2018]; root of context hierarchy
2018-04-03 16:51:30  [ main:243 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:51:30  [ background-preinit:275 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:51:30  [ main:275 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:51:30  [ main:623 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:51:30  [ main:639 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2375a9: startup date [Tue Apr 03 16:51:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:51:31  [ main:1524 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:51:31  [ main:1557 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:51:31  [ main:1635 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:51:31  [ main:1645 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:51:32  [ main:1676 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:51:32  [ main:2199 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:51:32  [ localhost-startStop-1:2346 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1707 ms
2018-04-03 16:51:32  [ localhost-startStop-1:2622 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:51:32  [ localhost-startStop-1:2626 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2627 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2628 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2628 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2628 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2628 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:51:32  [ localhost-startStop-1:2629 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:51:33  [ main:3418 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:51:33  [ main:3418 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:51:33  [ main:3424 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:51:33  [ main:3424 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:51:34  [ main:3655 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2375a9: startup date [Tue Apr 03 16:51:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:51:34  [ main:3731 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:51:34  [ main:3732 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:51:34  [ main:3762 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:51:34  [ main:3763 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:51:34  [ main:3801 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:51:34  [ main:4323 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:51:34  [ main:4324 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:51:34  [ main:4324 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4325 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:51:34  [ main:4325 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4326 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:51:34  [ main:4326 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4328 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:51:34  [ main:4328 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:51:34  [ main:4328 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4329 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:51:34  [ main:4329 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:51:34  [ main:4330 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4331 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4332 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:51:34  [ main:4332 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4333 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:51:34  [ main:4333 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4334 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:51:34  [ main:4335 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:51:34  [ main:4335 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4336 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4336 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4336 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:51:34  [ main:4337 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:51:34  [ main:4337 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:51:34  [ main:4338 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:51:34  [ main:4442 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2375a9: startup date [Tue Apr 03 16:51:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:51:34  [ main:4443 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:51:35  [ main:4651 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:51:35  [ main:4658 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4660 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4660 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4661 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4662 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4662 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:51:35  [ main:4664 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:51:35  [ main:4674 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:51:35  [ main:4684 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:51:35  [ main:4689 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:51:35  [ main:4697 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5c2375a9,type=ConfigurationPropertiesRebinder]
2018-04-03 16:51:35  [ main:4701 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:51:35  [ main:4702 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:51:35  [ main:4807 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:51:35  [ main:4815 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:51:35  [ main:4851 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:51:35  [ main:4852 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:51:35  [ main:4860 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745495211 with initial instances count: 0
2018-04-03 16:51:35  [ main:4883 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:51:35  [ main:4886 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:51:35  [ main:4890 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:51:35  [ main:4896 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:51:35  [ main:4897 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:51:35  [ main:4899 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:51:35  [ main:4901 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:51:35  [ main:4902 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:51:35  [ main:4904 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:51:35  [ main:4906 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:51:35  [ main:4911 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:51:35  [ main:4912 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:51:35  [ main:4914 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:51:35  [ main:4916 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:51:35  [ main:4918 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:51:35  [ main:4974 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:51:35  [ main:4975 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:51:35  [ main:4979 ] - [ INFO ]  Started SlazyOrderApplication in 5.356 seconds (JVM running for 5.728)
2018-04-03 16:51:37  [ http-nio-8081-exec-1:7636 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:51:38  [ http-nio-8081-exec-1:7653 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 16:52:05  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:52:05 CST 2018]; root of context hierarchy
2018-04-03 16:52:05  [ main:232 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:52:05  [ background-preinit:239 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:52:05  [ main:286 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:05  [ main:643 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:52:06  [ main:659 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc558c6: startup date [Tue Apr 03 16:52:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:52:06  [ main:1620 ] - [ INFO ]  BeanFactory id=bb42f580-a6a4-3ecf-9db4-e0858729e4bc
2018-04-03 16:52:07  [ main:1655 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:52:07  [ main:1739 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$af128c50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:07  [ main:1749 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ce5e60f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:07  [ main:1787 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:07  [ main:2147 ] - [ INFO ]  Tomcat initialized with port(s): 8085 (http)
2018-04-03 16:52:07  [ localhost-startStop-1:2301 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1642 ms
2018-04-03 16:52:07  [ localhost-startStop-1:2571 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:52:07  [ localhost-startStop-1:2577 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2577 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2578 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2578 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2578 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2578 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:52:07  [ localhost-startStop-1:2579 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:52:08  [ main:3431 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:52:08  [ main:3431 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:52:08  [ main:3437 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:52:08  [ main:3437 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:52:09  [ main:3685 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc558c6: startup date [Tue Apr 03 16:52:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:52:09  [ main:3762 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:52:09  [ main:3763 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:52:09  [ main:3793 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:09  [ main:3794 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:09  [ main:3833 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:09  [ main:4461 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:09  [ main:4461 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:09  [ main:4462 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4462 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:52:09  [ main:4463 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:52:09  [ main:4463 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:52:09  [ main:4464 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4464 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4465 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:52:09  [ main:4465 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:52:09  [ main:4466 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4466 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:52:09  [ main:4467 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:09  [ main:4467 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4468 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4469 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4469 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4470 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:52:09  [ main:4470 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4471 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:52:09  [ main:4472 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4473 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:52:09  [ main:4473 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:52:09  [ main:4473 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4474 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:52:09  [ main:4474 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:52:09  [ main:4475 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:09  [ main:4590 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc558c6: startup date [Tue Apr 03 16:52:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:52:09  [ main:4591 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:52:10  [ main:4881 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:52:10  [ main:4892 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4895 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4896 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4898 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4899 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4900 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:52:10  [ main:4903 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:52:10  [ main:4937 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:52:10  [ main:4960 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:52:10  [ main:4977 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:52:10  [ main:4993 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6cc558c6,type=ConfigurationPropertiesRebinder]
2018-04-03 16:52:10  [ main:5000 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:52:10  [ main:5005 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:52:10  [ main:5141 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:52:10  [ main:5150 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:52:10  [ main:5190 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:52:10  [ main:5191 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:52:10  [ main:5199 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745530553 with initial instances count: 0
2018-04-03 16:52:10  [ main:5234 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:52:10  [ main:5237 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:52:10  [ main:5244 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:52:10  [ main:5250 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:52:10  [ main:5251 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:52:10  [ main:5254 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:52:10  [ main:5256 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:52:10  [ main:5258 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:52:10  [ main:5259 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:52:10  [ main:5261 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:52:10  [ main:5265 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:52:10  [ main:5267 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:52:10  [ main:5269 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:52:10  [ main:5271 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:52:10  [ main:5273 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:52:10  [ main:5342 ] - [ INFO ]  Tomcat started on port(s): 8085 (http)
2018-04-03 16:52:10  [ main:5343 ] - [ INFO ]  Updating port to 8085
2018-04-03 16:52:10  [ main:5347 ] - [ INFO ]  Started SlazyOrderApplication in 5.734 seconds (JVM running for 6.111)
2018-04-03 16:52:15  [ http-nio-8085-exec-1:10606 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:52:15  [ http-nio-8085-exec-1:10624 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-04-03 16:52:40  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:52:40 CST 2018]; root of context hierarchy
2018-04-03 16:52:41  [ main:255 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:52:41  [ background-preinit:264 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:52:41  [ main:298 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:41  [ main:632 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:52:41  [ main:647 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:52:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:52:42  [ main:1599 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 16:52:42  [ main:1616 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:52:42  [ main:1699 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:42  [ main:1708 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:42  [ main:1743 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:52:42  [ main:2088 ] - [ INFO ]  Tomcat initialized with port(s): 8080 (http)
2018-04-03 16:52:43  [ localhost-startStop-1:2241 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1594 ms
2018-04-03 16:52:43  [ localhost-startStop-1:2508 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:52:43  [ localhost-startStop-1:2513 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2513 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2514 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2514 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2514 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2514 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:52:43  [ localhost-startStop-1:2514 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:52:44  [ main:3429 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:52:44  [ main:3429 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:52:44  [ main:3435 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:52:44  [ main:3436 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:52:44  [ main:3658 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:52:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:52:44  [ main:3730 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:52:44  [ main:3731 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:52:44  [ main:3759 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:44  [ main:3759 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:44  [ main:3796 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:52:45  [ main:4299 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:45  [ main:4299 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4300 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4300 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:45  [ main:4301 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4301 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4302 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4302 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:52:45  [ main:4303 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:52:45  [ main:4304 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:52:45  [ main:4305 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4306 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4306 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:52:45  [ main:4307 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:52:45  [ main:4307 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:52:45  [ main:4308 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:52:45  [ main:4309 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4309 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:52:45  [ main:4310 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4310 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:52:45  [ main:4310 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4311 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:52:45  [ main:4311 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:52:45  [ main:4312 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:52:45  [ main:4313 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:52:45  [ main:4313 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4313 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:52:45  [ main:4421 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 16:52:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:52:45  [ main:4422 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:52:45  [ main:4667 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:52:45  [ main:4674 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4676 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4676 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4677 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4677 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4678 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:52:45  [ main:4680 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:52:45  [ main:4691 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:52:45  [ main:4699 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:52:45  [ main:4705 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:52:45  [ main:4714 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c8c9a05,type=ConfigurationPropertiesRebinder]
2018-04-03 16:52:45  [ main:4718 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:52:45  [ main:4718 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:52:45  [ main:4831 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:52:45  [ main:4842 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:52:45  [ main:4883 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:52:45  [ main:4883 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:52:45  [ main:4891 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745565720 with initial instances count: 0
2018-04-03 16:52:45  [ main:4917 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:52:45  [ main:4920 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:52:45  [ main:4925 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:52:45  [ main:4930 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:52:45  [ main:4934 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:52:45  [ main:4937 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:52:45  [ main:4938 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:52:45  [ main:4940 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:52:45  [ main:4942 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:52:45  [ main:4943 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:52:45  [ main:4948 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:52:45  [ main:4950 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:52:45  [ main:4951 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:52:45  [ main:4953 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:52:45  [ main:4954 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:52:45  [ main:5008 ] - [ INFO ]  Tomcat started on port(s): 8080 (http)
2018-04-03 16:52:45  [ main:5009 ] - [ INFO ]  Updating port to 8080
2018-04-03 16:52:45  [ main:5011 ] - [ INFO ]  Started SlazyOrderApplication in 5.378 seconds (JVM running for 5.749)
2018-04-03 16:52:50  [ http-nio-8080-exec-1:10014 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:52:50  [ http-nio-8080-exec-1:10031 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2018-04-03 16:54:40  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:54:40 CST 2018]; root of context hierarchy
2018-04-03 16:54:40  [ main:237 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:54:40  [ background-preinit:238 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:54:40  [ main:265 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:54:40  [ main:607 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:54:40  [ main:622 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26ceffa8: startup date [Tue Apr 03 16:54:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:54:41  [ main:1515 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 16:54:41  [ main:1531 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:54:41  [ main:1610 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$af128c50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:54:41  [ main:1619 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ce5e60f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:54:41  [ main:1649 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$98ffe90c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:54:42  [ main:1985 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:54:42  [ localhost-startStop-1:2137 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1515 ms
2018-04-03 16:54:42  [ localhost-startStop-1:2425 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:54:42  [ localhost-startStop-1:2429 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2429 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2430 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2430 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2430 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2431 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:54:42  [ localhost-startStop-1:2431 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:54:43  [ main:3311 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:54:43  [ main:3311 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:54:43  [ main:3317 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:54:43  [ main:3317 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:54:43  [ main:3550 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26ceffa8: startup date [Tue Apr 03 16:54:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:54:43  [ main:3629 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:54:43  [ main:3630 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:54:43  [ main:3659 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:54:43  [ main:3660 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:54:43  [ main:3699 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:54:44  [ main:4220 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:54:44  [ main:4221 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4222 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4223 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:54:44  [ main:4223 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:54:44  [ main:4224 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4224 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4225 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:54:44  [ main:4225 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4227 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4227 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4228 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:54:44  [ main:4228 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:54:44  [ main:4228 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:54:44  [ main:4229 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:54:44  [ main:4229 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4230 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4230 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:54:44  [ main:4231 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:54:44  [ main:4232 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:54:44  [ main:4232 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:54:44  [ main:4233 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4233 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:54:44  [ main:4234 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4234 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:54:44  [ main:4234 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:54:44  [ main:4235 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:54:44  [ main:4349 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26ceffa8: startup date [Tue Apr 03 16:54:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:54:44  [ main:4350 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:54:44  [ main:4571 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:54:44  [ main:4578 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4579 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4580 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4580 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4581 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4581 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:54:44  [ main:4583 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:54:44  [ main:4593 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:54:44  [ main:4601 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:54:44  [ main:4607 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:54:44  [ main:4615 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=26ceffa8,type=ConfigurationPropertiesRebinder]
2018-04-03 16:54:44  [ main:4619 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:54:44  [ main:4619 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:54:44  [ main:4729 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:54:45  [ main:4740 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:54:45  [ main:4781 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:54:45  [ main:4781 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:54:45  [ main:4789 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745685058 with initial instances count: 0
2018-04-03 16:54:45  [ main:4814 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:54:45  [ main:4816 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:54:45  [ main:4822 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:54:45  [ main:4827 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:54:45  [ main:4829 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:54:45  [ main:4831 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:54:45  [ main:4833 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:54:45  [ main:4835 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:54:45  [ main:4837 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:54:45  [ main:4839 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:54:45  [ main:4843 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:54:45  [ main:4845 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:54:45  [ main:4846 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:54:45  [ main:4848 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:54:45  [ main:4850 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:54:45  [ main:4905 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 16:54:45  [ main:4905 ] - [ INFO ]  Updating port to 8081
2018-04-03 16:54:45  [ main:4909 ] - [ INFO ]  Started SlazyOrderApplication in 5.293 seconds (JVM running for 5.673)
2018-04-03 16:54:57  [ http-nio-8081-exec-1:17132 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:54:57  [ http-nio-8081-exec-1:17149 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 16:57:20  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409: startup date [Tue Apr 03 16:57:20 CST 2018]; root of context hierarchy
2018-04-03 16:57:21  [ background-preinit:181 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:57:21  [ main:301 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:57:21  [ main:331 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:57:21  [ main:658 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:57:21  [ main:679 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 16:57:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 16:57:22  [ main:1692 ] - [ INFO ]  BeanFactory id=b6f752f1-0c8e-3f87-adaa-ad8ad8bf4e54
2018-04-03 16:57:22  [ main:1745 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:57:22  [ main:1842 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$136cc9da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:57:22  [ main:1872 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:57:23  [ main:2221 ] - [ INFO ]  Tomcat initialized with port(s): 8080 (http)
2018-04-03 16:57:23  [ localhost-startStop-1:2372 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1693 ms
2018-04-03 16:57:23  [ localhost-startStop-1:2971 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:57:23  [ localhost-startStop-1:2976 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:57:23  [ localhost-startStop-1:2976 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:57:23  [ localhost-startStop-1:2976 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:57:23  [ localhost-startStop-1:2977 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:57:23  [ localhost-startStop-1:2977 ] - [ INFO ]  Mapping filter: 'tokenFilter' to urls: [/activity/*, /user/*, /sms/*]
2018-04-03 16:57:24  [ main:3427 ] - [ INFO ]  Mapped "{[/activity/addActivity],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.ActivityController.addActivity(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3428 ] - [ INFO ]  Mapped "{[/activity/queryActivity],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.ActivityController.queryActivity(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3429 ] - [ INFO ]  Mapped "{[/sms/SMSCodeGenerator],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.SmsController.SMSCodeGenerator(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3429 ] - [ INFO ]  Mapped "{[/sms/SMSIdentifyingCode],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.SmsController.SMSIdentifyingCode(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3430 ] - [ INFO ]  Mapped "{[/api/{id}],methods=[GET]}" onto public java.lang.String com.slazy.bss.user.controller.SwaggerDemoController.getStudent(int)
2018-04-03 16:57:24  [ main:3526 ] - [ INFO ]  Mapped "{[/user/queryUserInfoByMobile],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.queryUserInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3526 ] - [ INFO ]  Mapped "{[/user/queryUserInfoById],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.getAllUserInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3527 ] - [ INFO ]  Mapped "{[/user/queryUI],methods=[GET]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.queryUI(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3527 ] - [ INFO ]  Mapped "{[/user/registerUser],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.registerUser(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3527 ] - [ INFO ]  Mapped "{[/user/alterPassword],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.alterPassword(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3527 ] - [ INFO ]  Mapped "{[/user/loginVerify],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.loginVerify(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3528 ] - [ INFO ]  Mapped "{[/user/uploadUserImage],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.uploadUserImage(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3528 ] - [ INFO ]  Mapped "{[/user/perfectionUserInfo],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.perfectionUserInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3528 ] - [ INFO ]  Mapped "{[/user/queryUserAddressInfo],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.queryUserAddressInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3529 ] - [ INFO ]  Mapped "{[/user/updateUserAddressInfo],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.updateUserAddressInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3529 ] - [ INFO ]  Mapped "{[/user/insertUserAddressInfo],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.insertUserAddressInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3529 ] - [ INFO ]  Mapped "{[/user/deleteUserAddressInfo],methods=[POST]}" onto public java.lang.String com.slazy.bss.user.controller.UserController.deleteUserAddressInfo(java.lang.String) throws java.lang.Exception
2018-04-03 16:57:24  [ main:3530 ] - [ INFO ]  Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-03 16:57:24  [ main:3535 ] - [ INFO ]  Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-03 16:57:24  [ main:3536 ] - [ INFO ]  Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-03 16:57:24  [ main:3536 ] - [ INFO ]  Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-03 16:57:24  [ main:3539 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:57:24  [ main:3540 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:57:24  [ main:3940 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 16:57:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 16:57:24  [ main:3987 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:57:24  [ main:3988 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:57:24  [ main:4022 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:57:25  [ main:4323 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:57:25  [ main:4323 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:57:25  [ main:4330 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:57:25  [ main:4330 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:57:25  [ main:4392 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:57:25  [ main:4400 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:57:25  [ main:4401 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:57:25  [ main:4402 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:57:25  [ main:4404 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:57:25  [ main:4415 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:57:25  [ main:4429 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=291f18,type=ConfigurationPropertiesRebinder]
2018-04-03 16:57:25  [ main:4575 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:57:25  [ main:4581 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:57:25  [ main:4829 ] - [ INFO ]  Using JSON encoding codec LegacyJacksonJson
2018-04-03 16:57:25  [ main:4829 ] - [ INFO ]  Using JSON decoding codec LegacyJacksonJson
2018-04-03 16:57:25  [ main:4903 ] - [ INFO ]  Using XML encoding codec XStreamXml
2018-04-03 16:57:25  [ main:4903 ] - [ INFO ]  Using XML decoding codec XStreamXml
2018-04-03 16:57:25  [ main:5036 ] - [ INFO ]  Resolving eureka endpoints via configuration
2018-04-03 16:57:26  [ main:5096 ] - [ INFO ]  Disable delta property : false
2018-04-03 16:57:26  [ main:5096 ] - [ INFO ]  Single vip registry refresh property : null
2018-04-03 16:57:26  [ main:5096 ] - [ INFO ]  Force full registry fetch : false
2018-04-03 16:57:26  [ main:5097 ] - [ INFO ]  Application is null : false
2018-04-03 16:57:26  [ main:5097 ] - [ INFO ]  Registered Applications size is zero : true
2018-04-03 16:57:26  [ main:5097 ] - [ INFO ]  Application version is -1: true
2018-04-03 16:57:26  [ main:5097 ] - [ INFO ]  Getting all instance registry info from the eureka server
2018-04-03 16:57:28  [ main:7161 ] - [ ERROR ]  Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:180)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6$$FastClassBySpringCGLIB$$172e72c8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:192)
	at com.sun.proxy.$Proxy107.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.maybeInitializeClient(EurekaDiscoveryClientConfiguration.java:120)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.start(EurekaDiscoveryClientConfiguration.java:97)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.slazy.bss.user.SlazyUserApplication.main(SlazyUserApplication.java:27)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 67 more
2018-04-03 16:57:28  [ main:7169 ] - [ WARN ]  Request execution failure
2018-04-03 16:57:28  [ main:7171 ] - [ ERROR ]  DiscoveryClient_USER-SERVICE/hc-3020-i3-PC:user-service:8080 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1030)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:944)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:444)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:304)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:51)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:180)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6$$FastClassBySpringCGLIB$$172e72c8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$36efc5f6.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:192)
	at com.sun.proxy.$Proxy107.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.maybeInitializeClient(EurekaDiscoveryClientConfiguration.java:120)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration.start(EurekaDiscoveryClientConfiguration.java:97)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.slazy.bss.user.SlazyUserApplication.main(SlazyUserApplication.java:27)
2018-04-03 16:57:28  [ main:7177 ] - [ WARN ]  Using default backup registry implementation which does not do anything.
2018-04-03 16:57:28  [ main:7179 ] - [ INFO ]  Starting heartbeat executor: renew interval is: 30
2018-04-03 16:57:28  [ main:7183 ] - [ INFO ]  InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-04-03 16:57:28  [ main:7186 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745848129 with initial instances count: 0
2018-04-03 16:57:28  [ main:7215 ] - [ INFO ]  Registering application user-service with eureka with status UP
2018-04-03 16:57:28  [ main:7217 ] - [ INFO ]  Saw local status change event StatusChangeEvent [timestamp=1522745848160, current=UP, previous=STARTING]
2018-04-03 16:57:28  [ DiscoveryClient-InstanceInfoReplicator-0:7219 ] - [ INFO ]  DiscoveryClient_USER-SERVICE/hc-3020-i3-PC:user-service:8080: registering service...
2018-04-03 16:57:28  [ main:7243 ] - [ INFO ]  Context refreshed
2018-04-03 16:57:28  [ main:7259 ] - [ INFO ]  Found 1 custom documentation plugin(s)
2018-04-03 16:57:28  [ main:7267 ] - [ INFO ]  Scanning for api listing references
2018-04-03 16:57:28  [ main:7354 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7366 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7372 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7387 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7388 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7394 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7399 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7399 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7399 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7399 ] - [ WARN ]  Coercing to be of type string. This may not even be a scalar type in actuality
2018-04-03 16:57:28  [ main:7465 ] - [ INFO ]  Tomcat started on port(s): 8080 (http)
2018-04-03 16:57:28  [ main:7466 ] - [ INFO ]  Updating port to 8080
2018-04-03 16:57:28  [ main:7472 ] - [ INFO ]  Started SlazyUserApplication in 7.891 seconds (JVM running for 8.283)
2018-04-03 16:57:30  [ DiscoveryClient-InstanceInfoReplicator-0:9229 ] - [ ERROR ]  Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
2018-04-03 16:57:30  [ DiscoveryClient-InstanceInfoReplicator-0:9231 ] - [ WARN ]  Request execution failure
2018-04-03 16:57:30  [ DiscoveryClient-InstanceInfoReplicator-0:9232 ] - [ WARN ]  DiscoveryClient_USER-SERVICE/hc-3020-i3-PC:user-service:8080 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-04-03 16:57:30  [ DiscoveryClient-InstanceInfoReplicator-0:9232 ] - [ WARN ]  There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:815)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2018-04-03 16:57:40  [ http-nio-8080-exec-4:19875 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 16:57:40  [ http-nio-8080-exec-4:19902 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-04-03 16:57:40  [ http-nio-8080-exec-4:19914 ] - [ INFO ]  获取参数为
2018-04-03 16:57:40  [ http-nio-8080-exec-4:19975 ] - [ INFO ]  token验证失败
2018-04-03 16:59:25  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:59:25 CST 2018]; root of context hierarchy
2018-04-03 16:59:26  [ background-preinit:236 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:59:26  [ main:250 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:59:26  [ main:283 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:26  [ main:638 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:59:26  [ main:652 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:59:27  [ main:1571 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 16:59:27  [ main:1587 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:59:27  [ main:1664 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:27  [ main:1672 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:27  [ main:1707 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:28  [ main:2043 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:59:28  [ localhost-startStop-1:2216 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1564 ms
2018-04-03 16:59:28  [ localhost-startStop-1:2471 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:59:28  [ localhost-startStop-1:2475 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2476 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2476 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2476 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2477 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2477 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:59:28  [ localhost-startStop-1:2477 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:59:29  [ main:3273 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:59:29  [ main:3273 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:59:29  [ main:3280 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:59:29  [ main:3280 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:59:29  [ main:3505 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:59:29  [ main:3579 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:59:29  [ main:3580 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:59:29  [ main:3609 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:29  [ main:3610 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:29  [ main:3645 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:30  [ main:4145 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:59:30  [ main:4146 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4146 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4147 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4147 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:59:30  [ main:4147 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:59:30  [ main:4148 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4149 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:59:30  [ main:4149 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:59:30  [ main:4149 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4150 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:59:30  [ main:4150 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:59:30  [ main:4152 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:59:30  [ main:4152 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:59:30  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:59:30  [ main:4154 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4155 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4155 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:30  [ main:4156 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:59:30  [ main:4156 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4156 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4157 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:30  [ main:4158 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:30  [ main:4158 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4159 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:59:30  [ main:4159 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:30  [ main:4265 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:59:30  [ main:4266 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 16:59:30  [ main:4490 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:59:30  [ main:4498 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4500 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4501 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4501 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4502 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4503 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 16:59:30  [ main:4505 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 16:59:30  [ main:4515 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 16:59:30  [ main:4525 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 16:59:30  [ main:4530 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 16:59:30  [ main:4539 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63f259c3,type=ConfigurationPropertiesRebinder]
2018-04-03 16:59:30  [ main:4543 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 16:59:30  [ main:4543 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 16:59:30  [ main:4663 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 16:59:30  [ main:4675 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 16:59:30  [ main:4713 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 16:59:30  [ main:4714 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 16:59:30  [ main:4723 ] - [ INFO ]  Discovery Client initialized at timestamp 1522745970684 with initial instances count: 0
2018-04-03 16:59:30  [ main:4748 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 16:59:30  [ main:4751 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 16:59:30  [ main:4756 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 16:59:30  [ main:4761 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 16:59:30  [ main:4763 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 16:59:30  [ main:4765 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 16:59:30  [ main:4767 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 16:59:30  [ main:4769 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 16:59:30  [ main:4772 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 16:59:30  [ main:4774 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 16:59:30  [ main:4779 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 16:59:30  [ main:4781 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 16:59:30  [ main:4783 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 16:59:30  [ main:4784 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 16:59:30  [ main:4786 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 16:59:30  [ main:4846 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 16:59:30  [ main:4850 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2018-04-03 16:59:30  [ main:4852 ] - [ INFO ]  Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:59:30  [ main:4853 ] - [ INFO ]  Unregistering application order-service with eureka with status DOWN
2018-04-03 16:59:30  [ main:4853 ] - [ INFO ]  Shutting down DiscoveryClient ...
2018-04-03 16:59:30  [ main:4853 ] - [ INFO ]  Completed shut down of DiscoveryClient
2018-04-03 16:59:30  [ main:4855 ] - [ INFO ]  Stopping beans in phase 0
2018-04-03 16:59:30  [ main:4857 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2018-04-03 16:59:30  [ main:4857 ] - [ INFO ]  Unregistering JMX-exposed beans
2018-04-03 16:59:30  [ main:4857 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2018-04-03 16:59:30  [ main:4857 ] - [ INFO ]  Unregistering JMX-exposed beans
2018-04-03 16:59:55  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 16:59:55 CST 2018]; root of context hierarchy
2018-04-03 16:59:55  [ background-preinit:232 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 16:59:55  [ main:276 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:59:55  [ main:326 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:55  [ main:684 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 16:59:55  [ main:700 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:59:56  [ main:1793 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 16:59:56  [ main:1809 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 16:59:56  [ main:1894 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:56  [ main:1902 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:56  [ main:1933 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 16:59:57  [ main:2291 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 16:59:57  [ localhost-startStop-1:2463 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1763 ms
2018-04-03 16:59:57  [ localhost-startStop-1:2764 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 16:59:57  [ localhost-startStop-1:2769 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2769 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2770 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2770 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2770 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2770 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 16:59:57  [ localhost-startStop-1:2770 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 16:59:58  [ main:3547 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:59:58  [ main:3547 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:59:58  [ main:3553 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 16:59:58  [ main:3553 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 16:59:58  [ main:3785 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 16:59:58  [ main:3877 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 16:59:58  [ main:3879 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 16:59:58  [ main:3917 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:58  [ main:3918 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:59  [ main:3958 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 16:59:59  [ main:4592 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:59  [ main:4592 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:59  [ main:4594 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 16:59:59  [ main:4595 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:59:59  [ main:4595 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4596 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 16:59:59  [ main:4596 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4597 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4597 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 16:59:59  [ main:4598 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 16:59:59  [ main:4598 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4599 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 16:59:59  [ main:4599 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4601 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 16:59:59  [ main:4601 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 16:59:59  [ main:4601 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 16:59:59  [ main:4603 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 16:59:59  [ main:4603 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4604 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4604 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4605 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4606 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 16:59:59  [ main:4606 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 16:59:59  [ main:4606 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4607 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4607 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 16:59:59  [ main:4608 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 16:59:59  [ main:4736 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 16:59:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 16:59:59  [ main:4737 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:00:00  [ main:4987 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:00:00  [ main:4998 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5000 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5000 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5000 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5001 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5001 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:00:00  [ main:5004 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:00:00  [ main:5016 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:00:00  [ main:5025 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:00:00  [ main:5031 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:00:00  [ main:5041 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63f259c3,type=ConfigurationPropertiesRebinder]
2018-04-03 17:00:00  [ main:5045 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:00:00  [ main:5050 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:00:00  [ main:5178 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:00:00  [ main:5190 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:00:00  [ main:5235 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:00:00  [ main:5235 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:00:00  [ main:5248 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746000298 with initial instances count: 0
2018-04-03 17:00:00  [ main:5275 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:00:00  [ main:5278 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:00:00  [ main:5283 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:00:00  [ main:5287 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:00:00  [ main:5294 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:00:00  [ main:5296 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:00:00  [ main:5298 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:00:00  [ main:5300 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:00:00  [ main:5302 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:00:00  [ main:5304 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:00:00  [ main:5308 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:00:00  [ main:5310 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:00:00  [ main:5311 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:00:00  [ main:5313 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:00:00  [ main:5315 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:00:00  [ main:5385 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:00:00  [ main:5386 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:00:00  [ main:5389 ] - [ INFO ]  Started SlazyOrderApplication in 5.763 seconds (JVM running for 6.147)
2018-04-03 17:00:03  [ http-nio-8081-exec-1:8803 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:00:03  [ http-nio-8081-exec-1:8820 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 17:01:49  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab: startup date [Tue Apr 03 17:01:49 CST 2018]; root of context hierarchy
2018-04-03 17:01:49  [ background-preinit:112 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:01:49  [ main:139 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:01:49  [ main:168 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c17d55a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:01:50  [ main:434 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:01:50  [ main:446 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2796aeae: startup date [Tue Apr 03 17:01:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab
2018-04-03 17:01:50  [ main:1230 ] - [ INFO ]  BeanFactory id=59370fe1-c43c-382d-94af-ab953d123b33
2018-04-03 17:01:50  [ main:1244 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:01:50  [ main:1305 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d78ff8e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:01:50  [ main:1313 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a56352a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:01:50  [ main:1339 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c17d55a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:01:51  [ main:1551 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:01:51  [ localhost-startStop-1:1660 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1214 ms
2018-04-03 17:01:51  [ localhost-startStop-1:1854 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:01:51  [ localhost-startStop-1:1858 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1858 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1859 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1860 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1860 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1860 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:01:51  [ localhost-startStop-1:1860 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:01:52  [ main:2435 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:01:52  [ main:2436 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:01:52  [ main:2439 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:01:52  [ main:2440 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:01:52  [ main:2654 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2796aeae: startup date [Tue Apr 03 17:01:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab
2018-04-03 17:01:52  [ main:2702 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:01:52  [ main:2703 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:01:52  [ main:2730 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:01:52  [ main:2731 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:01:52  [ main:2765 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:01:52  [ main:3208 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:01:52  [ main:3209 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3209 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:01:52  [ main:3209 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 17:01:52  [ main:3210 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 17:01:52  [ main:3210 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3211 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 17:01:52  [ main:3211 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3211 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 17:01:52  [ main:3212 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:01:52  [ main:3212 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 17:01:52  [ main:3212 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3214 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 17:01:52  [ main:3215 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:01:52  [ main:3215 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3216 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3216 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3217 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 17:01:52  [ main:3217 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3218 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:01:52  [ main:3218 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 17:01:52  [ main:3219 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3219 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3220 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 17:01:52  [ main:3220 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3220 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 17:01:52  [ main:3221 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:01:52  [ main:3303 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2796aeae: startup date [Tue Apr 03 17:01:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab] and template loader path [classpath:/templates/]
2018-04-03 17:01:52  [ main:3303 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:01:53  [ main:3568 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:01:53  [ main:3574 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3577 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3577 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3577 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3578 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3578 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:01:53  [ main:3580 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:01:53  [ main:3590 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:01:53  [ main:3597 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:01:53  [ main:3602 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:01:53  [ main:3609 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2796aeae,type=ConfigurationPropertiesRebinder]
2018-04-03 17:01:53  [ main:3613 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:01:53  [ main:3613 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:01:53  [ main:3802 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:01:53  [ main:3808 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:01:53  [ main:3832 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:01:53  [ main:3833 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:01:53  [ main:3837 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746113441 with initial instances count: 0
2018-04-03 17:01:53  [ main:3854 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:01:53  [ main:3856 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:01:53  [ main:3861 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:01:53  [ main:3865 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:01:53  [ main:3866 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:01:53  [ main:3868 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:01:53  [ main:3869 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:01:53  [ main:3870 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:01:53  [ main:3872 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:01:53  [ main:3874 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:01:53  [ main:3878 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:01:53  [ main:3879 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:01:53  [ main:3880 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:01:53  [ main:3882 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:01:53  [ main:3883 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:01:53  [ main:3926 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:01:53  [ main:3927 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:01:53  [ main:3930 ] - [ INFO ]  Started SlazyOrderApplication in 4.215 seconds (JVM running for 4.802)
2018-04-03 17:02:03  [ http-nio-8081-exec-1:13776 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:02:03  [ http-nio-8081-exec-1:13795 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54236 ] - [ INFO ]  Application shutdown requested.
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54236 ] - [ INFO ]  Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2796aeae: startup date [Tue Apr 03 17:01:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1b1473ab
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54237 ] - [ INFO ]  Unregistering application order-service with eureka with status DOWN
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54237 ] - [ INFO ]  Shutting down DiscoveryClient ...
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54238 ] - [ INFO ]  Completed shut down of DiscoveryClient
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54239 ] - [ INFO ]  Stopping beans in phase 0
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54241 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54241 ] - [ INFO ]  Unregistering JMX-exposed beans
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54242 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2018-04-03 17:02:43  [ RMI TCP Connection(2)-127.0.0.1:54242 ] - [ INFO ]  Unregistering JMX-exposed beans
2018-04-03 17:02:47  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 17:02:47 CST 2018]; root of context hierarchy
2018-04-03 17:02:48  [ main:234 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:02:48  [ background-preinit:257 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:02:48  [ main:274 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:02:48  [ main:626 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:02:48  [ main:640 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2375a9: startup date [Tue Apr 03 17:02:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:02:49  [ main:1859 ] - [ INFO ]  BeanFactory id=a6047641-b0e8-35da-9afa-a64e91bd0498
2018-04-03 17:02:49  [ main:1877 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:02:49  [ main:1969 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:02:49  [ main:2002 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:02:49  [ main:2011 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:02:50  [ main:2449 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:02:50  [ localhost-startStop-1:2613 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1973 ms
2018-04-03 17:02:50  [ localhost-startStop-1:2879 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:02:50  [ localhost-startStop-1:2883 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2883 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2884 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2884 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2884 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2885 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:02:50  [ localhost-startStop-1:2885 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:02:50  [ main:2928 ] - [ WARN ]  Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.slazy.bss.order.service.OrderService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-04-03 17:02:50  [ main:2949 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 17:02:50  [ main:3091 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderService in com.slazy.bss.order.controller.OrderController required a bean of type 'com.slazy.bss.order.service.OrderService' that could not be found.


Action:

Consider defining a bean of type 'com.slazy.bss.order.service.OrderService' in your configuration.

2018-04-03 17:03:00  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 17:03:00 CST 2018]; root of context hierarchy
2018-04-03 17:03:00  [ main:235 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:03:00  [ background-preinit:244 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:03:00  [ main:277 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:03:01  [ main:605 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:03:01  [ main:620 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:03:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:03:01  [ main:1506 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 17:03:01  [ main:1522 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:03:02  [ main:1594 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:03:02  [ main:1602 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:03:02  [ main:1632 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:03:02  [ main:1966 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:03:02  [ localhost-startStop-1:2120 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1500 ms
2018-04-03 17:03:02  [ localhost-startStop-1:2348 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:03:02  [ localhost-startStop-1:2352 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2352 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2353 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2353 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2353 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2353 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:03:02  [ localhost-startStop-1:2354 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:03:03  [ main:3134 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:03:03  [ main:3135 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:03:03  [ main:3140 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:03:03  [ main:3140 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:03:03  [ main:3366 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:03:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:03:03  [ main:3441 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:03:03  [ main:3442 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:03:03  [ main:3472 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:03:03  [ main:3473 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:03:03  [ main:3510 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:03:04  [ main:4005 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:03:04  [ main:4006 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4006 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4007 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:03:04  [ main:4007 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4008 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4008 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4009 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 17:03:04  [ main:4009 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 17:03:04  [ main:4010 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 17:03:04  [ main:4011 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4012 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4013 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:03:04  [ main:4013 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 17:03:04  [ main:4013 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 17:03:04  [ main:4014 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:03:04  [ main:4015 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4015 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 17:03:04  [ main:4016 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4016 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 17:03:04  [ main:4016 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4017 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 17:03:04  [ main:4017 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 17:03:04  [ main:4018 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 17:03:04  [ main:4018 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:03:04  [ main:4019 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4019 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:03:04  [ main:4127 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:03:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 17:03:04  [ main:4129 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:03:04  [ main:4317 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:03:04  [ main:4325 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4327 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4328 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4329 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4329 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4330 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:03:04  [ main:4333 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:03:04  [ main:4344 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:03:04  [ main:4352 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:03:04  [ main:4356 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:03:04  [ main:4364 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c8c9a05,type=ConfigurationPropertiesRebinder]
2018-04-03 17:03:04  [ main:4368 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:03:04  [ main:4370 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:03:04  [ main:4475 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:03:04  [ main:4484 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:03:04  [ main:4522 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:03:04  [ main:4522 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:03:05  [ main:4534 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746185003 with initial instances count: 0
2018-04-03 17:03:05  [ main:4563 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:03:05  [ main:4566 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:03:05  [ main:4571 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:03:05  [ main:4576 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:03:05  [ main:4578 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:03:05  [ main:4580 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:03:05  [ main:4582 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:03:05  [ main:4584 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:03:05  [ main:4585 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:03:05  [ main:4587 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:03:05  [ main:4591 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:03:05  [ main:4593 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:03:05  [ main:4594 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:03:05  [ main:4596 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:03:05  [ main:4598 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:03:05  [ main:4655 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:03:05  [ main:4656 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:03:05  [ main:4659 ] - [ INFO ]  Started SlazyOrderApplication in 5.029 seconds (JVM running for 5.403)
2018-04-03 17:03:09  [ http-nio-8081-exec-1:8996 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:03:09  [ http-nio-8081-exec-1:9014 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2018-04-03 17:05:23  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 17:05:23 CST 2018]; root of context hierarchy
2018-04-03 17:05:23  [ background-preinit:235 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:05:23  [ main:255 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:05:23  [ main:283 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:05:24  [ main:612 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:05:24  [ main:627 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:05:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:05:25  [ main:1517 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 17:05:25  [ main:1535 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:05:25  [ main:1615 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:05:25  [ main:1625 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:05:25  [ main:1657 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:05:25  [ main:2009 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:05:25  [ localhost-startStop-1:2161 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1534 ms
2018-04-03 17:05:25  [ localhost-startStop-1:2408 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:05:25  [ localhost-startStop-1:2412 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2412 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2413 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2413 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2413 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2413 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:05:25  [ localhost-startStop-1:2414 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:05:26  [ main:3201 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:05:26  [ main:3201 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:05:26  [ main:3207 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:05:26  [ main:3208 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:05:26  [ main:3442 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:05:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:05:27  [ main:3515 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:05:27  [ main:3516 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:05:27  [ main:3543 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:05:27  [ main:3544 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:05:27  [ main:3581 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:05:27  [ main:4091 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4092 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:05:27  [ main:4092 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4093 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 17:05:27  [ main:4093 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4094 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 17:05:27  [ main:4094 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 17:05:27  [ main:4095 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:05:27  [ main:4095 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 17:05:27  [ main:4095 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:05:27  [ main:4096 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 17:05:27  [ main:4096 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4096 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4097 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4098 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4100 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 17:05:27  [ main:4100 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:05:27  [ main:4100 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4101 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 17:05:27  [ main:4101 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4102 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:05:27  [ main:4103 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 17:05:27  [ main:4104 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 17:05:27  [ main:4104 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4105 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 17:05:27  [ main:4105 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4105 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:05:27  [ main:4211 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:05:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 17:05:27  [ main:4212 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:05:27  [ main:4415 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:05:27  [ main:4424 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4425 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4425 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4426 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4426 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4427 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:05:27  [ main:4429 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:05:27  [ main:4438 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:05:27  [ main:4446 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:05:27  [ main:4451 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:05:27  [ main:4459 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c8c9a05,type=ConfigurationPropertiesRebinder]
2018-04-03 17:05:27  [ main:4463 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:05:27  [ main:4464 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:05:28  [ main:4568 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:05:28  [ main:4577 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:05:28  [ main:4616 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:05:28  [ main:4616 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:05:28  [ main:4624 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746328134 with initial instances count: 0
2018-04-03 17:05:28  [ main:4647 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:05:28  [ main:4650 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:05:28  [ main:4654 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:05:28  [ main:4659 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:05:28  [ main:4661 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:05:28  [ main:4662 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:05:28  [ main:4664 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:05:28  [ main:4665 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:05:28  [ main:4667 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:05:28  [ main:4669 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:05:28  [ main:4673 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:05:28  [ main:4675 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:05:28  [ main:4677 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:05:28  [ main:4679 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:05:28  [ main:4680 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:05:28  [ main:4738 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:05:28  [ main:4739 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:05:28  [ main:4743 ] - [ INFO ]  Started SlazyOrderApplication in 5.1 seconds (JVM running for 5.476)
2018-04-03 17:05:40  [ http-nio-8081-exec-1:16927 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:05:40  [ http-nio-8081-exec-1:16946 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2018-04-03 17:08:52  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409: startup date [Tue Apr 03 17:08:52 CST 2018]; root of context hierarchy
2018-04-03 17:08:52  [ background-preinit:180 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:08:53  [ main:300 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:08:53  [ main:329 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:08:53  [ main:626 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:08:53  [ main:641 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 17:08:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 17:08:54  [ main:1313 ] - [ INFO ]  BeanFactory id=d0db5f2f-719a-32b6-9ef7-fda86cea6e5a
2018-04-03 17:08:54  [ main:1327 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:08:54  [ main:1423 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$136cc9da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:08:54  [ main:1445 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:08:54  [ main:1773 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:08:54  [ localhost-startStop-1:1927 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1286 ms
2018-04-03 17:08:54  [ localhost-startStop-1:2048 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:08:54  [ localhost-startStop-1:2053 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:08:54  [ localhost-startStop-1:2054 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:08:54  [ localhost-startStop-1:2054 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:08:54  [ localhost-startStop-1:2054 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:08:55  [ main:2859 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 17:08:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 17:08:55  [ main:2913 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:08:55  [ main:2914 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:08:55  [ main:2942 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:08:55  [ main:2942 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:08:55  [ main:2976 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:08:56  [ main:3372 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:08:56  [ main:3373 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:08:56  [ main:3377 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:08:56  [ main:3378 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:08:56  [ main:3427 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:08:56  [ main:3434 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:08:56  [ main:3435 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:08:56  [ main:3436 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:08:56  [ main:3437 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:08:56  [ main:3448 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:08:56  [ main:3456 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=291f18,type=ConfigurationPropertiesRebinder]
2018-04-03 17:08:56  [ main:3532 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:08:56  [ main:3538 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:08:56  [ main:3578 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:08:56  [ main:3587 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746536395 with initial instances count: 0
2018-04-03 17:08:56  [ main:3610 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:08:56  [ main:3654 ] - [ INFO ]  

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-04-03 17:08:56  [ main:3658 ] - [ ERROR ]  

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2018-04-03 17:08:56  [ main:3660 ] - [ INFO ]  Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 17:08:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 17:08:56  [ main:3660 ] - [ INFO ]  Unregistering application order-service with eureka with status DOWN
2018-04-03 17:08:56  [ main:3660 ] - [ INFO ]  Shutting down DiscoveryClient ...
2018-04-03 17:08:56  [ main:3661 ] - [ INFO ]  Completed shut down of DiscoveryClient
2018-04-03 17:08:56  [ main:3662 ] - [ INFO ]  Stopping beans in phase 0
2018-04-03 17:08:56  [ main:3663 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2018-04-03 17:08:56  [ main:3663 ] - [ INFO ]  Unregistering JMX-exposed beans
2018-04-03 17:09:16  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409: startup date [Tue Apr 03 17:09:16 CST 2018]; root of context hierarchy
2018-04-03 17:09:16  [ background-preinit:223 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:09:16  [ main:258 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:09:16  [ main:298 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:09:17  [ main:607 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:09:17  [ main:622 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 17:09:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 17:09:17  [ main:1253 ] - [ INFO ]  BeanFactory id=d0db5f2f-719a-32b6-9ef7-fda86cea6e5a
2018-04-03 17:09:17  [ main:1269 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:09:18  [ main:1372 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$136cc9da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:09:18  [ main:1400 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f86ccd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:09:18  [ main:1771 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:09:18  [ localhost-startStop-1:1914 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1292 ms
2018-04-03 17:09:18  [ localhost-startStop-1:2045 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:09:18  [ localhost-startStop-1:2050 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:09:18  [ localhost-startStop-1:2050 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:09:18  [ localhost-startStop-1:2050 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:09:18  [ localhost-startStop-1:2051 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:09:19  [ main:2838 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@291f18: startup date [Tue Apr 03 17:09:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@527e5409
2018-04-03 17:09:19  [ main:2892 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:09:19  [ main:2893 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:09:19  [ main:2922 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:09:19  [ main:2923 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:09:19  [ main:2960 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:09:20  [ main:3358 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:09:20  [ main:3358 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:09:20  [ main:3364 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:09:20  [ main:3364 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:09:20  [ main:3417 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:09:20  [ main:3424 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:09:20  [ main:3425 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:09:20  [ main:3426 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:09:20  [ main:3427 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:09:20  [ main:3437 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:09:20  [ main:3446 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=291f18,type=ConfigurationPropertiesRebinder]
2018-04-03 17:09:20  [ main:3528 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:09:20  [ main:3534 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:09:20  [ main:3573 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:09:20  [ main:3582 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746560223 with initial instances count: 0
2018-04-03 17:09:20  [ main:3605 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:09:20  [ main:3653 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:09:20  [ main:3654 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:09:20  [ main:3657 ] - [ INFO ]  Started SlazyOrderApplication in 4.038 seconds (JVM running for 4.409)
2018-04-03 17:09:29  [ http-nio-8081-exec-1:12754 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:09:29  [ http-nio-8081-exec-1:12771 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2018-04-03 17:10:46  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 17:10:46 CST 2018]; root of context hierarchy
2018-04-03 17:10:46  [ background-preinit:241 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:10:46  [ main:250 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:10:46  [ main:299 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:10:46  [ main:633 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:10:46  [ main:647 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 17:10:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:10:47  [ main:1572 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 17:10:47  [ main:1588 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:10:47  [ main:1671 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:10:47  [ main:1682 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:10:47  [ main:1715 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:10:48  [ main:2103 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:10:48  [ localhost-startStop-1:2310 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1663 ms
2018-04-03 17:10:48  [ localhost-startStop-1:2540 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:10:48  [ localhost-startStop-1:2544 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2545 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2545 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2546 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2546 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2546 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:10:48  [ localhost-startStop-1:2546 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:10:49  [ main:3364 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:10:49  [ main:3365 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:10:49  [ main:3371 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:10:49  [ main:3371 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:10:49  [ main:3597 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 17:10:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:10:49  [ main:3672 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:10:49  [ main:3673 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:10:49  [ main:3706 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:10:49  [ main:3707 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:10:49  [ main:3746 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:10:50  [ main:4441 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4442 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 17:10:50  [ main:4442 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4443 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4443 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 17:10:50  [ main:4444 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4445 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4445 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4446 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:10:50  [ main:4446 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 17:10:50  [ main:4446 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:10:50  [ main:4448 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 17:10:50  [ main:4448 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 17:10:50  [ main:4449 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 17:10:50  [ main:4449 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 17:10:50  [ main:4450 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 17:10:50  [ main:4451 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4451 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 17:10:50  [ main:4451 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4453 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 17:10:50  [ main:4453 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:10:50  [ main:4454 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4455 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:10:50  [ main:4456 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4456 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:10:50  [ main:4459 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4460 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:10:50  [ main:4574 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63f259c3: startup date [Tue Apr 03 17:10:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 17:10:50  [ main:4575 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:10:50  [ main:4764 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:10:50  [ main:4771 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4773 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4773 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4774 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4774 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4774 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:10:50  [ main:4777 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:10:50  [ main:4788 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:10:51  [ main:4796 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:10:51  [ main:4801 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:10:51  [ main:4810 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63f259c3,type=ConfigurationPropertiesRebinder]
2018-04-03 17:10:51  [ main:4814 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:10:51  [ main:4814 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:10:51  [ main:4924 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:10:51  [ main:4934 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:10:51  [ main:4974 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:10:51  [ main:4975 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:10:51  [ main:4982 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746651187 with initial instances count: 0
2018-04-03 17:10:51  [ main:5007 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:10:51  [ main:5010 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:10:51  [ main:5014 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:10:51  [ main:5019 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:10:51  [ main:5021 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:10:51  [ main:5022 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:10:51  [ main:5024 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:10:51  [ main:5026 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:10:51  [ main:5027 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:10:51  [ main:5029 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:10:51  [ main:5036 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:10:51  [ main:5038 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:10:51  [ main:5040 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:10:51  [ main:5041 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:10:51  [ main:5043 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:10:51  [ main:5104 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:10:51  [ main:5105 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:10:51  [ main:5109 ] - [ INFO ]  Started SlazyOrderApplication in 5.488 seconds (JVM running for 5.867)
2018-04-03 17:11:36  [ http-nio-8081-exec-1:50206 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:11:36  [ http-nio-8081-exec-1:50226 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2018-04-03 17:12:47  [ main:0 ] - [ INFO ]  Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f: startup date [Tue Apr 03 17:12:47 CST 2018]; root of context hierarchy
2018-04-03 17:12:47  [ background-preinit:241 ] - [ INFO ]  HV000001: Hibernate Validator 5.3.5.Final
2018-04-03 17:12:47  [ main:269 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:12:47  [ main:310 ] - [ INFO ]  Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:12:47  [ main:652 ] - [ INFO ]  No active profile set, falling back to default profiles: default
2018-04-03 17:12:47  [ main:667 ] - [ INFO ]  Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:12:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:12:48  [ main:1601 ] - [ INFO ]  BeanFactory id=5015dbf3-0948-3255-93da-0fbddf54a350
2018-04-03 17:12:48  [ main:1618 ] - [ INFO ]  JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-03 17:12:49  [ main:1699 ] - [ INFO ]  Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c4706c0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:12:49  [ main:1708 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9243c5cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:12:49  [ main:1743 ] - [ INFO ]  Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ae5dc8ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-03 17:12:49  [ main:2093 ] - [ INFO ]  Tomcat initialized with port(s): 8081 (http)
2018-04-03 17:12:49  [ localhost-startStop-1:2239 ] - [ INFO ]  Root WebApplicationContext: initialization completed in 1572 ms
2018-04-03 17:12:49  [ localhost-startStop-1:2513 ] - [ INFO ]  Mapping servlet: 'dispatcherServlet' to [/]
2018-04-03 17:12:49  [ localhost-startStop-1:2518 ] - [ INFO ]  Mapping filter: 'metricsFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2518 ] - [ INFO ]  Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2519 ] - [ INFO ]  Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2519 ] - [ INFO ]  Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2519 ] - [ INFO ]  Mapping filter: 'requestContextFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2520 ] - [ INFO ]  Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-04-03 17:12:49  [ localhost-startStop-1:2520 ] - [ INFO ]  Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-04-03 17:12:50  [ main:3450 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:12:50  [ main:3451 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:12:50  [ main:3458 ] - [ WARN ]  No URLs will be polled as dynamic configuration sources.
2018-04-03 17:12:50  [ main:3459 ] - [ INFO ]  To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-04-03 17:12:51  [ main:3702 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:12:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f
2018-04-03 17:12:51  [ main:3779 ] - [ INFO ]  Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-03 17:12:51  [ main:3779 ] - [ INFO ]  Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-03 17:12:51  [ main:3811 ] - [ INFO ]  Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:12:51  [ main:3812 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:12:51  [ main:3852 ] - [ INFO ]  Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-03 17:12:51  [ main:4391 ] - [ INFO ]  Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:12:51  [ main:4392 ] - [ INFO ]  Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:12:51  [ main:4392 ] - [ INFO ]  Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4393 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-04-03 17:12:51  [ main:4393 ] - [ INFO ]  Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4394 ] - [ INFO ]  Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4395 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-04-03 17:12:51  [ main:4395 ] - [ INFO ]  Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4395 ] - [ INFO ]  Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:12:51  [ main:4396 ] - [ INFO ]  Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-04-03 17:12:51  [ main:4396 ] - [ INFO ]  Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4397 ] - [ INFO ]  Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4398 ] - [ INFO ]  Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4398 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-04-03 17:12:51  [ main:4399 ] - [ INFO ]  Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-04-03 17:12:51  [ main:4399 ] - [ INFO ]  Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-04-03 17:12:51  [ main:4401 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-04-03 17:12:51  [ main:4401 ] - [ INFO ]  Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-04-03 17:12:51  [ main:4401 ] - [ INFO ]  Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4403 ] - [ INFO ]  Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-04-03 17:12:51  [ main:4403 ] - [ INFO ]  Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4404 ] - [ INFO ]  Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-04-03 17:12:51  [ main:4404 ] - [ INFO ]  Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4405 ] - [ INFO ]  Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4405 ] - [ INFO ]  Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-04-03 17:12:51  [ main:4406 ] - [ INFO ]  Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-04-03 17:12:51  [ main:4406 ] - [ INFO ]  Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-04-03 17:12:51  [ main:4510 ] - [ INFO ]  SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c8c9a05: startup date [Tue Apr 03 17:12:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3c72f59f] and template loader path [classpath:/templates/]
2018-04-03 17:12:51  [ main:4512 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-03 17:12:52  [ main:4739 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:12:52  [ main:4750 ] - [ INFO ]  Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4751 ] - [ INFO ]  Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4752 ] - [ INFO ]  Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4752 ] - [ INFO ]  Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4753 ] - [ INFO ]  Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4754 ] - [ INFO ]  Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-04-03 17:12:52  [ main:4756 ] - [ INFO ]  Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-04-03 17:12:52  [ main:4773 ] - [ INFO ]  Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-04-03 17:12:52  [ main:4782 ] - [ INFO ]  Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-04-03 17:12:52  [ main:4788 ] - [ INFO ]  Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-04-03 17:12:52  [ main:4799 ] - [ INFO ]  Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c8c9a05,type=ConfigurationPropertiesRebinder]
2018-04-03 17:12:52  [ main:4803 ] - [ INFO ]  Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-04-03 17:12:52  [ main:4805 ] - [ INFO ]  Registering beans for JMX exposure on startup
2018-04-03 17:12:52  [ main:4946 ] - [ INFO ]  Starting beans in phase 0
2018-04-03 17:12:52  [ main:4956 ] - [ INFO ]  Setting initial instance status as: STARTING
2018-04-03 17:12:52  [ main:4993 ] - [ INFO ]  Initializing Eureka in region us-east-1
2018-04-03 17:12:52  [ main:4994 ] - [ INFO ]  Client configured to neither register nor query for data.
2018-04-03 17:12:52  [ main:5002 ] - [ INFO ]  Discovery Client initialized at timestamp 1522746772322 with initial instances count: 0
2018-04-03 17:12:52  [ main:5032 ] - [ INFO ]  Registering application order-service with eureka with status UP
2018-04-03 17:12:52  [ main:5035 ] - [ INFO ]  Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-04-03 17:12:52  [ main:5043 ] - [ INFO ]  Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-04-03 17:12:52  [ main:5054 ] - [ INFO ]  Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-04-03 17:12:52  [ main:5059 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-04-03 17:12:52  [ main:5066 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-04-03 17:12:52  [ main:5071 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-04-03 17:12:52  [ main:5073 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-04-03 17:12:52  [ main:5077 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-04-03 17:12:52  [ main:5080 ] - [ INFO ]  Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-04-03 17:12:52  [ main:5087 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-04-03 17:12:52  [ main:5089 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-04-03 17:12:52  [ main:5092 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-04-03 17:12:52  [ main:5094 ] - [ INFO ]  Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-04-03 17:12:52  [ main:5098 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-04-03 17:12:52  [ main:5168 ] - [ INFO ]  Tomcat started on port(s): 8081 (http)
2018-04-03 17:12:52  [ main:5169 ] - [ INFO ]  Updating port to 8081
2018-04-03 17:12:52  [ main:5172 ] - [ INFO ]  Started SlazyOrderApplication in 5.568 seconds (JVM running for 5.947)
2018-04-03 17:12:56  [ http-nio-8081-exec-3:9151 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization started
2018-04-03 17:12:56  [ http-nio-8081-exec-3:9192 ] - [ INFO ]  FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
